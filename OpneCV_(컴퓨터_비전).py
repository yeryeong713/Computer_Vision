# -*- coding: utf-8 -*-
"""OpneCV (컴퓨터_비전).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P88ziyWUME2MAd3EU3SHsZGbjVDkUd3m

3~9번까지 기능 구현

vsCode OpenCV 사용 시
Terminal에서
python -m pip install opencv-python
명령어 실행
"""

# 3. 영상을 읽고 표시하기
import cv2 as cv
import sys

img = cv.imread('C:/Users/demon/Desktop/img(OpenCV)/soccer.jpg')

if img is None:
    sys.exit('파일이 존재하지 않음')

cv.imshow('Image Display',img)
print(img[0,0,0], img[0,0,1], img[0,0,2])

#Image Display라는 창을 키보드 입력이 들어올 때까지 켜놓기.
cv.waitKey()
cv.destroyAllWindows()

#Image Display 창이 꺼지면 img의 type과 shape을 출력함
print(type(img))
print(img.shape)

# 4. 영상 형태 변환하고 크기 축소하기

import cv2 as cv
import sys

img = cv.imread('C:/Users/demon/Desktop/img(OpenCV)/soccer.jpg')

if img is None:
  sys.exit('파일이 존재하지 않음')

gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
gray_small=cv.resize(gray, dsize=(0,0), fx=0.5, fy=0.5)

cv.imwrite('soccer_gray.jpg', gray)
cv.imwrite('soccer_gray_small.jpg', gray_small)

cv.imshow('Color image',img)
cv.imshow('Gray image',gray)
cv.imshow('Gray image small',gray_small)

cv.waitKey()
cv.destroyAllWindows()

#OpenCV(computer_vision)

#5. 웹 캠에서 비디오 읽기
#6. 비디오에서 수집한 영상 이어 붙이기

import cv2 as cv
import numpy as np
import sys

cap = cv.VideoCapture(0, cv.CAP_DSHOW)


if not cap.isOpened():
  sys.exit('카메라 연결 실패')

frames=[]
while True:
  ret, frame = cap.read()

  if not ret:
    print('프레임 획득 실패 > 루프 나감')
    break

  cv.imshow('Video display', frame)

  key = cv.waitKey(1)
  if key==ord('c'):
    frames.append(frame)
  elif key==ord('q'):
    break

cap.release()
cv.destroyAllWindows()

if len(frames)>0:
  imgs=frames[0]
  for i in range(1, min(3, len(frames))):
    imgs=np.hstack((imgs, frames[i]))

  cv.imshow('collected images', imgs)

  cv.waitKey()
  cv.destroyAllWindows()

print(len(frames))
print(frames[0].shape)
print(type(imgs))
print(imgs.shpe)

#7. 영상에 도형을 그리고 글씨 쓰기
import cv2 as cv
import sys

img=cv.imread('C:/Users/demon/Desktop/img(OpenCV)/apples.jpg')

if img is None:
  sys.exit('파일을 찾을 수 없음')

# cv.rectangle(img,(290,780),(620,950),(0,0,225),2)
# cv.putText(img, 'mouse',(290,770), cv.FONT_HERSHEY_SIMPLEX,1,(255,0,0),2)

def draw(event, x, y, flags, param):
  if event==cv.EVENT_LBUTTONDOWN:
    cv.rectangle(img,(x,y),(x+200,y+200),(0,0,225),2)
  elif event==cv.EVENT_RBUTTONDOWN:
    cv.rectangle(img,(x,y),(x+100,y+100),(255,0,0),2)

  cv.imshow('Draw',img)

cv.namedWindow('Drawing')
cv.imshow('Drawing',img)

cv.setMouseCallback('Drawing',draw)

while(True):
  if cv.waitKey(1)==ord('q'):
    cv.destroyAllWindows()
    break

# cv.waitKey()
# cv.destroyAllWindows()

#8. 마우스 드래그로 도형 크기 조절하기
import cv2 as cv
import sys

img=cv.imread('C:/Users/demon/Desktop/img(OpenCV)/apples.jpg')

if img is None:
  sys.exit('파일을 찾을 수 없음')

def draw(event, x, y, flags, param):
    global ix,iy
    if event==cv.EVENT_LBUTTONDOWN:
        ix,iy=x,y
    elif event==cv.EVENT_LBUTTONUP:
        cv.rectangle(img,(ix,iy),(x,y),(0,0,255),2)

    cv.imshow('Drawing',img)

cv.namedWindow('Drawing')
cv.imshow('Drawing',img)

cv.setMouseCallback('Drawing',draw)

while(True):
  if cv.waitKey(1)==ord('q'):
    cv.destroyAllWindows()
    break

#9. 마우스 드래그로 도형 크기 조절하기
import cv2
import sys

BrushSize = 5
LColor, RColor = (255,0,0), (0,0,255)

def painting(event, x, y, flags, param):
    if event==cv2.EVENT_LBUTTONDOWN:
        cv2.circle(img,(x,y), BrushSize, LColor, -1)
    elif event == cv2.EVENT_RBUTTONDOWN:
        cv2.circle(img,(x,y), BrushSize, RColor, -1)
    elif event == cv2.EVENT_MOUSEMOVE and flags == cv2.EVENT_FLAG_LBUTTON:
        cv2.circle(img,(x,y), BrushSize, LColor, -1)
    elif event == cv2.EVENT_MOUSEMOVE and flags == cv2.EVENT_FLAG_RBUTTON:
        cv2.circle(img,(x,y), BrushSize, RColor, -1)

    cv2.imshow('Painting', img)

img=cv2.imread('C:/Users/demon/Desktop/img(OpenCV)/apples.jpg')

if img is None:
  sys.exit('파일을 찾을 수 없음')

cv2.namedWindow('Painting')
cv2.imshow('Painting',img)
cv2.setMouseCallback('Painting',painting)

while(True):
  if cv2.waitKey(1)==ord('q'):
    cv2.destroyAllWindows()
    break